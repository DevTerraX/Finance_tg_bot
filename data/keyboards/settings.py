# keyboards/settings.py
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def get_settings_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton("üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤")],
            [KeyboardButton("üí∞ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤")],
            [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )
    return keyboard

def get_categories_management_keyboard(categories, category_type) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø–µ—Ä–≤—ã–µ 3-4 –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
    cat_buttons = []
    for i, category in enumerate(categories[:4]):
        cat_buttons.append(KeyboardButton(category['name']))
        if i % 2 == 1:  # –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
            keyboard.append(cat_buttons)
            cat_buttons = []
    
    if cat_buttons:
        keyboard.append(cat_buttons)
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –±–æ–ª—å—à–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ"
    if len(categories) > 4:
        keyboard.append([KeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")])
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    keyboard.extend([
        [KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")],
        [KeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")],
        [KeyboardButton("üîô –ù–∞–∑–∞–¥")]
    ])
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=False
    )

def get_categories_delete_keyboard(categories, category_type) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    keyboard = []
    
    for i, category in enumerate(categories):
        row = []
        # –î–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ä—è–¥
        if i % 2 == 0 and i + 1 < len(categories):
            row.append(KeyboardButton(f"üóëÔ∏è {categories[i]['name']}"))
            row.append(KeyboardButton(f"üóëÔ∏è {categories[i+1]['name']}"))
            i += 1
        else:
            row.append(KeyboardButton(f"üóëÔ∏è {category['name']}"))
        keyboard.append(row)
    
    keyboard.append([KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")])
    
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=True
    )
def get_categories_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("–ö–∞—Ç–µ–≥–æ—Ä–∏—è 1", callback_data="category_1"),
        InlineKeyboardButton("–ö–∞—Ç–µ–≥–æ—Ä–∏—è 2", callback_data="category_2"),
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")
    )
    return keyboard

def get_settings_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.add(
        KeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤"),
        KeyboardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤"),
        KeyboardButton("–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞"),  # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ clean_chat
        KeyboardButton("–ù–∞–∑–∞–¥")
    )
    return keyboard